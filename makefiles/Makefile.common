########################################################################
# COMMON MAKEFILE STUFF
#
JDK=1.7
SHELL=/bin/sh

.SUFFIXES: .cpp $(.SUFFIXES)
PREFIX:=/usr/local

SRC_DIR = ../src/java/src
IMAGE_DIR = ../src/java/src/images
OSX_SRC_DIR = ../src/macos
WORK_DIR = build
BLD_DIR = $(WORK_DIR)/build
WWJ_DIR = $(WORK_DIR)/worldwind
BIN_DIR = $(WORK_DIR)/bin
DL_DIR = $(WORK_DIR)/download
DST_DIR = $(WORK_DIR)/sdt3d
LIB_DIR = $(DST_DIR)/lib
JAR_DIR = $(DST_DIR)/jars
JOGL_DIR = $(BLD_DIR)/jogl
JOGL_BLD_DIR = $(JOGL_DIR)/build
JOGLUTILS_DIR = $(BLD_DIR)/joglutils
JOGLUTILS_MK_DIR = $(JOGLUTILS_DIR)/make

PROTOLIB = $(BLD_DIR)/protolib
PROTOLIBJNI = $(BLD_DIR)/protolib
COMMON = ../src/common
INCLUDE = ../include
UNIX = ../makefiles
# This software depends upon the NRL Protean Group's
# "Protokit" development library
LIBPROTO = $(PROTOLIB)/lib/libprotokit.a
    
INCLUDES =  $(SYSTEM_INCLUDES) $(WX_INCLUDES) -I$(PROTOLIB)/include -I$(INCLUDE) 

WX_CFLAGS = -g -DUNIX -DPROTO_DEBUG -Wall -O -fPIC $(SYSTEM_FLAGS) $(WX_FLAGS) $(INCLUDES) $(SYSTEM_HAVES)
CFLAGS = -g -DUNIX -DPROTO_DEBUG -Wall -O -fPIC $(SYSTEM_FLAGS) $(INCLUDES) $(SYSTEM_HAVES)

LIBS = $(SYSTEM_LIBS) -lm   

TARGETS = sdt 

# Rule for C++ .cpp extension
.cpp.o:
	$(CC) -c $(WX_CFLAGS) -o $*.o $*.cpp
         
SRC = $(COMMON)/sdt.cpp $(PROTOLIB)/src/wx/wxProtoApp.cpp
          
OBJ = $(SRC:.cpp=.o)

all:	sdt3d sdtcmd sdt 

$(LIBPROTO): 
	$(MAKE) -C $(PROTOLIB)/makefiles -f Makefile.$(SYSTEM)    

sdt:        $(DL_DIR) $(BLD_DIR) $(PROTOLIB) $(OBJ) $(LIBPROTO) 
	$(CC) $(WX_CFLAGS) -o $@ $(OBJ) $(LIBPROTO) $(WX_LIBS) $(LIBS)	
	cp $@ ../bin/$@

sdt.app: sdt ../src/macos/Info.plist.in
	mkdir -p sdt.app/Contents
	mkdir -p sdt.app/Contents/MacOS
	mkdir -p sdt.app/Contents/Resources
	cp ../src/macos/Info.plist.in sdt.app/Contents/Info.plist
	cp ../src/macos/sdtLogo.icns sdt.app/Contents/Resources/
	echo "APPL????" >sdt.app/Contents/PkgInfo
	$(CC) $(WX_CFLAGS) -o $@/Contents/MacOS/sdt $(OBJ) $(LIBPROTO) $(LIBS) $(WX_LIBS)
	mkdir -p ../bin
	cp -R $@ ../bin/$@

sdt3d.app: sdt3d 
	cp $(OSX_SRC_DIR)/sdt3d.app.zip .
	unzip -q sdt3d.app.zip
	cp Info.plist sdt3d.app/Contents
	cp bulkDownload-osx-app-script.sh sdt3d.app/Contents/bulkDownload.sh
	cp bulkDownload.jar sdt3d.app/Contents/Resources/Java
	cp -R $(JAR_DIR)/* sdt3d.app/Contents/Resources/Java
	cp -R $(LIB_DIR)/* sdt3d.app/Contents/Resources/Java
	zip -q -r sdt3d.zip sdt3d.app

PLAYER_SRC = $(COMMON)/sdtPlayer.cpp
PLAYER_OBJ = $(PLAYER_SRC:.cpp=.o)


sdtplay:	$(PLAYER_OBJ) $(LIBPROTO)
	$(CC) $(CFLAGS) -o $@ $(PLAYER_OBJ) $(LIBPROTO) $(LIBS)

CMD_SRC   =  $(COMMON)/sdtCmd.cpp
CMD_OBJ   =  $(CMD_SRC:.cpp=.o)

sdtcmd:   $(CMD_OBJ) $(LIBPROTO)
	$(CC) $(CFLAGS) -o $@ $(CMD_OBJ) $(LIBPROTO) $(LIBS)

APP_NAME = sdt3d

PROTOLIB_OBJS = $(LIB_DIR)/libProtolibJni.$(PROTO_SO_EXT)\
				$(JAR_DIR)/protolib-jni.jar

WORLDWIND_OBJS = $(JAR_DIR)/gluegen-rt-natives-$(PLATFORM).jar\
				 $(JAR_DIR)/jogl-all-natives-$(PLATFORM).jar\
				 $(JAR_DIR)/gluegen-rt.jar\
			   	 $(JAR_DIR)/jogl-all.jar\
				 $(JAR_DIR)/worldwind.jar\
				 $(JAR_DIR)/worldwindx.jar\
				 $(JAR_DIR)/gdal.jar

JOGLUTILS_OBJS = $(JAR_DIR)/joglutils.jar

sdt3d: $(WORK_DIR) $(BLD_DIR) $(BIN_DIR) $(DL_DIR) $(WWJ_DIR) $(DST_DIR) $(LIB_DIR) $(JAR_DIR) $(JOGL_DIR) $(JOGL_BLD_DIR) $(JOGLUTILS_DIR) $(JOGLUTILS_MK_DIR) $(JAR_DIR)/sdt3d.jar sdt3d.zip

.PHONY:        sdt3d clean distclean 
all: $(WORK_DIR) $(BLD_DIR) $(BIN_DIR) $(DL_DIR) $(DST_DIR) $(LIB_DIR) $(JAR_DIR) $(JOGL_DIR) $(JOGL_BLD_DIR) $(JOGLUTILS_DIR) $(JOGLUTILS_MK_DIR) sdt3d.zip 

$(WORK_DIR):
	mkdir -p $@
$(BLD_DIR):
	mkdir -p $@
$(WWJ_DIR):
	mkdir -p $@
$(BIN_DIR):
	mkdir -p $@
$(DL_DIR):
	mkdir -p $@
$(DST_DIR):
	mkdir -p $@
$(LIB_DIR):
	mkdir -p $@
$(JAR_DIR):
	mkdir -p $@
$(JOGL_DIR):
	mkdir -p $@
$(JOGL_BLD_DIR):
	mkdir -p $@
$(JOGLUTILS_DIR):
	mkdir -p $@
$(JOGLUTILS_MK_DIR):
	mkdir -p $@

## SDT3D ##
sdt3d.zip: $(JAR_DIR)/sdt3d.jar
	cp sdt3d-distribution.sh $(DST_DIR)/sdt3d.sh
	cp bulkDownload-linux-app-script.sh $(DST_DIR)/bulkDownload.sh
	cp bulkDownload.jar $(JAR_DIR)/bulkDownload.jar
	rsync -aC $(SRC_DIR)/images $(DST_DIR)/
	cd $(WORK_DIR) && zip -q -r $@ sdt3d
	mv $(WORK_DIR)/$@ $@

$(JAR_DIR)/sdt3d.jar: $(PROTOLIBJNI) $(PROTOLIB_OBJS) $(WORLDWIND_OBJS) $(JOGLUTILS_OBJS)
	javac -d $(BIN_DIR) -sourcepath $(SRC_DIR) -classpath $(JAR_DIR)/protolib-jni.jar:$(JAR_DIR)/worldwindx.jar:$(JAR_DIR)/worldwind.jar:$(JAR_DIR)/joglutils.jar:build/sdt3d/jars/jogl-all.jar:build/sdt3d/jars/gdal.jar:build/sdt3d/jars/gluegen-rt.jar $(SRC_DIR)/mil/navy/nrl/sdt3d/sdt3d.java
	jar cfm $@ Manifest-$(PLATFORM).txt -C $(BIN_DIR) mil -C $(SRC_DIR) images


## Protolib ##

#../protolib:
#	if test -d $@; then echo using local $@ tree; else mkdir -p $@; wget -O ../protolib.tgz http://downloads.pf.itd.n#rl.navy.mil/protolib/nightly_snapshots/protolib-svnsnap.tgz; tar xf ../protolib.tgz -C ..; cd $@ && ./waf configure;# cd $@ && ./waf build; echo downloaded protolib.tgz; fi

$(PROTOLIB_OBJS): $(BLD_DIR)/protolib
	cp -L $(BLD_DIR)/protolib/build/$(notdir $@) $@

$(BLD_DIR)/protolib: $(DL_DIR)/protolib.tgz
	tar xf $< -C $(BLD_DIR)
	cd $(BLD_DIR)/protolib && ./waf configure --build-java
	cd $(BLD_DIR)/protolib && ./waf build

$(DL_DIR)/protolib.tgz: protolib.tgz
	cp -P protolib.tgz $(DL_DIR)/protolib.tgz

## / Protolib ##

protolib.tgz:
	wget -O $@ http://downloads.pf.itd.nrl.navy.mil/protolib/nightly_snapshots/protolib-svnsnap.tgz

## Worldwind (and jogl, etc) ##
$(WORLDWIND_OBJS): $(BLD_DIR)/worldwind
	cp $(BLD_DIR)/worldwind/$(notdir $@) $@

$(BLD_DIR)/worldwind: $(DL_DIR)/worldwind.zip
	unzip -q -d $(BLD_DIR) $<
	cd $(BLD_DIR)/worldwind && ant

$(DL_DIR)/worldwind.zip: worldwind.zip
        # 1.5 release
	cp -P worldwind.zip $(DL_DIR)/worldwind.zip

worldwind.zip:
	echo $(JDK)
	./prep-wwj $(JDK)

## / Worldwind ##


## JOGL Utilities ##
$(JOGLUTILS_OBJS): $(BLD_DIR)/joglutils
	cp $(BLD_DIR)/joglutils/build/joglutils.jar $@

$(BLD_DIR)/joglutils: $(DL_DIR)/joglutils.zip $(BLD_DIR)/worldwind
	unzip -q -d $(BLD_DIR) $<
	cp $(BLD_DIR)/worldwind/jogl-all.jar $(JOGL_BLD_DIR)/jogl-all.jar
	cp $(BLD_DIR)/worldwind/jogl-all-natives-$(PLATFORM).jar $(JOGL_BLD_DIR)/jogl-all-native.jar
	cd $(JOGLUTILS_MK_DIR) && ant
	cp $(JOGLUTILS_DIR)/build/joglutils.jar $(JAR_DIR)
	

$(DL_DIR)/joglutils.zip: joglutils.zip
	cp -P joglutils.zip $(DL_DIR)/joglutils.zip

joglutils.zip:
	./prep-joglutils

## / JOGL Utilities ##

clean: 
	rm -rf *.o ../src/common/*.o sdt sdt.app sdtcmd sdtplay sdt3d.app sdt3d.zip;
	-rm -rf sdt3d.zip $(BLD_DIR) $(BIN_DIR) $(DST_DIR) $(LIB_DIR) $(JAR_DIR) $(JOGL_DIR) $(JOGL_BLD_DIR) $(JOGLUTILS_DIR) $(JOGLUTILS_MK_DIR)
#	$(MAKE) -C $(PROTOLIB)/makefiles -f Makefile.$(SYSTEM) clean


distclean:   clean
	-rm -rf $(WORK_DIR) joglutils worldwind
#	rm -rf joglutils.zip 
#	rm -rf worldwind.zip 
	rm -rf worldwind-v2.1.0.zip

install:
	/usr/bin/install -o root -g ${PLATFORM_GROUP} sdt3d-${SYSTEM}.sh ${PREFIX}/bin/sdt3d.sh
	/usr/bin/install -o root -g ${PLATFORM_GROUP} sdtcmd ${PREFIX}/bin/sdtcmd

# DO NOT DELETE THIS LINE -- mkdep uses it.
# DO NOT PUT ANYTHING AFTER THIS LINE, IT WILL GO AWAY.

